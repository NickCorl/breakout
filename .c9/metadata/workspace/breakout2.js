{"changed":true,"filter":false,"title":"breakout2.js","tooltip":"/breakout2.js","value":"//Initalize canvas variables\nvar c = document.getElementById(\"gameCanvas\");\nvar ctx = c.getContext(\"2d\");\n\n// Background Gradient\nvar grd = ctx.createLinearGradient(0,0,200,0);\n\n//keyboard events\ndocument.addEventListener(\"keydown\", keyboardEvents, false);\n\n//Ball Properties\nvar move_x = 1;\nvar move_y = -1;\nvar RADIUS = 10;\nvar ball_x = c.width/2;\nvar ball_y = c.height/2;\nvar BALL_FPS = 5;\n\n\n//Paddle Properties\nvar PADDLE_HEIGHT = 10;\nvar PADDLE_WIDTH = 50;\nvar paddle_x = c.width/2;\nvar paddle_y= c.height - PADDLE_HEIGHT;\nvar PADDLE_FPS = 15;\n\n//General Game properties\nvar numLives = 3;\nvar i = 0;\nvar j = 0;\nvar game_over = false;\nvar showResetMenu = false;\nvar end_game = false;\nvar welcomeScreen = true;\nvar level = 1;\nvar score = 0;\nvar score_tracker = 0;\nvar gameOverLatch = false;\n\n\n//block properties\nvar numRows = 3;\nvar numCols = 15;\nvar blockWidth = 40;\nvar blockHeight = 20;\nvar spacing = 10;\nvar topMargin = 30;\nvar leftMargin = 30;\nvar blocks = [];\nvar place_x = 0;\nvar place_y = 0;\nvar colorSelector = 0;\n\n\nfunction gameCanvas() {\n    ctx.clearRect(0,0,c.width,c.height);\n    ctx.beginPath();\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(0, 0, c.width, c.height);\n}\n\nfunction play(){\n    \n    \n    //clears the canvas\n    ctx.clearRect(0,0,c.width,c.height);\n    \n    //draws blocks to break\n    if(!welcomeScreen){ \n    drawLevel();\n    //draw ball and paddle\n    drawBall();\n    drawPaddle();\n    //movement\n    moveBall();\n    //block collison\n    breakBlock();\n    //draw lives\n    showLivesLeft();\n    //draw level\n    showLevel();\n    //draw score\n    showScore();\n    //show game over message\n    if(game_over){\n        // Implements highscore API\n        if(!gameOverLatch){\n            highscore(score);\n            update_scores();\n        }\n        \n        gameOver();\n    }\n    //reset game\n    if(showResetMenu){\n    resetMenu();\n    }\n    //if user deos not want to play again\n    if(end_game){\n    endGame();    \n    }\n    \n    } else{\n    welcome();\n    }\n    \n}\n\n\nfunction welcome(){                                         \n    //cover screen for welcome message\n    ctx.beginPath();\n    ctx.rect(0, 0, c.width, c.height);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n    \n    //message\n    ctx.font = \"50px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Welcome to...\", 20, 70,1000);\n    \n    //Break out image\n    var img = document.getElementById(\"thumbnail\");\n    ctx.drawImage(img, 150, 100);\n    \n    //message\n    ctx.font = \"40px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Play (ENTER)\", c.width - 280, c.height - 20 ,1000);\n    \n \n}\n\nfunction drawPaddle(){\n    //drawing the paddle\n    ctx.beginPath();\n    ctx.rect(paddle_x, paddle_y, PADDLE_WIDTH, PADDLE_HEIGHT);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n    \n}\n\nfunction drawBall(){\n    //drawing the ball\n    ctx.beginPath();\n    ctx.arc(ball_x,ball_y,RADIUS,0,Math.PI*2);\n    ctx.fillStyle = \"black\";\n    ctx.fill();\n    ctx.closePath();\n    \n \n}\n\nfunction moveBall(){\n    \n    $(\"#something\").click(function(e){\n   var parentOffset = $(this).parent().offset(); \n   //or $(this).offset(); if you really just want the current element's offset\n   var relX = e.pageX - parentOffset.left;\n   var relY = e.pageY - parentOffset.top;\n    });\n    \n    //moving the ball and detecting the edges of the canvas\n    if(ball_y + move_y < RADIUS){\n        move_y = -1*move_y;\n        \n    }else if(ball_y + move_y > c.height - RADIUS - PADDLE_HEIGHT){\n        //paddle collision detection\n        if(ball_x >= paddle_x && ball_x <= paddle_x + PADDLE_WIDTH){\n            if(!showResetMenu && !game_over && !end_game){\n                playHitSound();\n            }\n            move_y = -1*move_y;\n            \n            if( ball_x < paddle_x + PADDLE_WIDTH/2){\n                move_x -= .75;\n            }\n            if(ball_x > paddle_x + PADDLE_WIDTH/2){\n                move_x += .75;\n            }\n        }else if (ball_y + move_y > c.height + RADIUS){\n            if(numLives == 1){\n                \n               numLives = numLives -1;\n               game_over = true;\n               \n               //5s timer before asking to play again\n               setTimeout(resetMenu, 5000);    \n               \n               //stop the ball\n               move_x = 0;\n               move_y = 0;\n                \n            }else{\n            //player loss a life\n            numLives = numLives - 1;\n            //restart the ball position to continue playing\n            ball_x = c.width/2;\n            ball_y = c.height/2;\n            move_x = 1;\n            move_y = -1;\n            }\n        }\n        \n    }\n    if(ball_x + move_x > c.width - RADIUS || ball_x + move_x < RADIUS){\n        move_x = -1*move_x;\n        \n    }\n    //level complete\n    if(numLives != 0 && score_tracker == numRows*numCols){\n        score_tracker = 0;\n        level++;\n        if(numRows < 7){\n            numRows++;\n        }\n        ball_x = c.width/2;\n        ball_y = c.height/2;\n        move_x = 1;\n        move_y = -1;\n\n    //Creating the block objects to break\n    for(i = 0; i < numCols; i++){\n        blocks[i] = [];\n        for(j = 0; j < numRows; j++){\n            blocks[i][j]={ block_x: 0, block_y: 0, color: Math.floor(Math.random() * 6) + 1, broken: false};\n        \n        }\n    }\n    for(i = 0; i < numCols; i++){\n        for(j = 0; j < numRows; j++){\n                blocks[i][j].broken = false;\n                \n            }\n        }\n        \n    \n    drawLevel();\n    }\n    \n    ball_x = ball_x + move_x;\n    ball_y = ball_y + move_y;\n    \n}\n\nfunction movePaddle(e) {\n      \n$( \"#gameCanvas\" ).mousemove(function( e ) {\n    var rect = c.getBoundingClientRect();\n    paddle_x = e.clientX - rect.left - PADDLE_WIDTH/2;\n});\n\n}\n\nsetInterval(play,BALL_FPS);\ndocument.onmousemove = movePaddle;\n\n//Creating the block objects to break\nfor(i = 0; i < numCols; i++){\n    blocks[i] = [];\n    for(j = 0; j < numRows; j++){\n        blocks[i][j]={ block_x: 0, block_y: 0, color: Math.floor(Math.random() * 6) + 1, broken: false};\n        \n    }\n}\n\nfunction drawLevel(){\n    for(i = 0; i < numCols; i++){\n         for(j = 0; j < numRows; j++){\n            if(blocks[i][j].broken == false){\n            //changing position of block placements\n            place_x = i*(blockWidth+spacing)+leftMargin;\n            place_y = j*(blockHeight+spacing)+topMargin;\n            blocks[i][j].block_x = place_x;\n            blocks[i][j].block_y = place_y;\n            //drawing and filling\n            ctx.beginPath();\n            ctx.rect(place_x,place_y,blockWidth,blockHeight);\n            \n            //random color generator or could make blocks have a theme? \n            colorSelector = blocks[i][j].color;\n            switch (colorSelector) {\n                case 1:\n                ctx.fillStyle = \"blue\";\n                    break;\n                case 2:\n                ctx.fillStyle = \"green\";\n                    break;\n                case 3:\n                ctx.fillStyle = \"red\";\n                    break;\n                case 4:\n                ctx.fillStyle = \"yellow\";\n                    break;\n                case 5:\n                ctx.fillStyle = \"purple\";\n                    break;\n                default:\n                ctx.fillStyle = \"orange\";\n            }\n            \n\n            ctx.fill();\n            ctx.closePath();\n            }\n         }\n    }\n}\n\n//detection of brealing a block\nfunction breakBlock(){\n                    \nfor(i = 0; i < numCols; i++){\n\n    for(j = 0; j < numRows; j++){\n        \n        var blockCheck = blocks[i][j];\n        \n        if(blockCheck.broken == false){\n\n            if(ball_y < blockCheck.block_y+blockHeight && ball_y > blockCheck.block_y && ball_x < blockCheck.block_x + blockWidth && ball_x > blockCheck.block_x){\n                if(!showResetMenu && !game_over && !end_game){\n                playHitSound();\n                }\n                move_y = -1*move_y;\n                blockCheck.broken = true;\n                score += 5;\n                score_tracker ++;\n\n            }\n        }\n    }  \n}\n\n}\n\nfunction playHitSound(){\n    var snd = new Audio(\"audio/tree.mp3\"); // buffers automatically when created\n    snd.play();\n    \n}\n\nfunction showLivesLeft(){\n    \n    ctx.font = \"20px Courier\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"Lives Remaining: \" + numLives, 20, 20);\n    \n    \n    \n}\n\nfunction showLevel(){\n    \n    ctx.font = \"20px Courier\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"Level: \" + level, c.width/2 - 50, 20);\n}\n\n\n\nfunction showScore(){\n    \n    ctx.font = \"20px Courier\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"Score: \" + score, 660, 20);\n}\n    \n\nfunction gameOver(){\n\n    //cover screen for game over message\n    ctx.beginPath();\n    ctx.rect(10, 30, c.width - 20, c.height - 20);\n    ctx.fillStyle = \"rgb(153,204,255)\";\n    ctx.fill();\n    ctx.closePath();\n    \n    //game over message\n    ctx.font = \"50px Arial\";\n    ctx.fillStyle = \"red\";\n    ctx.fillText(\"GAME OVER\", c.width/2 - 150, 200, 500);\n    \n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = \"red\";\n    ctx.fillText(\"Check out your score below!\", c.width/2 - 200, 250, 500);\n    gameOverLatch = true;\n    \n}\n\nfunction resetMenu(){\n    showResetMenu = true;\n    \n    //cover screen for reset message\n    ctx.beginPath();\n    ctx.rect(10, 30, c.width - 20, c.height - 20);\n    ctx.fillStyle = \"rgb(153,153,204)\";\n    ctx.fill();\n    ctx.closePath();\n    \n    //message\n    ctx.font = \"50px Arial\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"Would you like to play again?\", c.width/2 - 250, 200, 500);\n    \n   //Yes or no\n    ctx.font = \"50px Arial\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"YES (y)\", c.width/2 - 70, 300, 500);\n    \n    ctx.font = \"50px Arial\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"NO (n)\", c.width/2 - 55, 400, 500);\n\n}\n\nfunction keyboardEvents(k){\n    if(welcomeScreen){\n \n            //play\n            if(k.keyCode == 13){\n            welcomeScreen = false;\n            }\n        \n    }\n    \n    if(showResetMenu){\n    //yes\n    k.preventDefault();\n    if(k.keyCode == 89) { \n        for(i = 0; i < numCols; i++){\n\n            for(j = 0; j < numRows; j++){\n                blocks[i][j].broken = false;\n                \n            }\n        }\n        game_over = false;\n        showResetMenu = false;\n        gameOverLatch = false;\n        ball_x = c.width/2;\n        ball_y = c.height/2;\n        move_x = 1;\n        move_y = -1;\n        score = 0;\n        score_tracker = 0;\n        level = 1;\n        numLives = 3;\n        numRows = 3;\n        \n    }\n        //no\n        if(k.keyCode == 78) {\n          end_game = true;\n        }\n    \n    }\n\n} \n\nfunction endGame(){\n    \n    //cover screen for final message\n    ctx.beginPath();\n    ctx.rect(0, 0, c.width, c.height);\n    ctx.fillStyle = \"rgb(0,204,102)\";\n    ctx.fill();\n    ctx.closePath();\n    \n    //message\n    ctx.font = \"50px Arial\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"Come back soon!!\", c.width/2 - 200, 200, 500);\n    \n    \n}\n\n","undoManager":{"mark":1,"position":24,"stack":[[{"start":{"row":88,"column":27},"end":{"row":88,"column":28},"action":"insert","lines":[";"],"id":2}],[{"start":{"row":87,"column":28},"end":{"row":87,"column":29},"action":"insert","lines":[";"],"id":3}],[{"start":{"row":249,"column":0},"end":{"row":249,"column":1},"action":"insert","lines":["g"],"id":4}],[{"start":{"row":249,"column":1},"end":{"row":249,"column":2},"action":"insert","lines":["l"],"id":5}],[{"start":{"row":249,"column":2},"end":{"row":249,"column":3},"action":"insert","lines":["o"],"id":6}],[{"start":{"row":249,"column":3},"end":{"row":249,"column":4},"action":"insert","lines":["b"],"id":7}],[{"start":{"row":249,"column":4},"end":{"row":249,"column":5},"action":"insert","lines":["a"],"id":8}],[{"start":{"row":249,"column":5},"end":{"row":249,"column":6},"action":"insert","lines":["l"],"id":9}],[{"start":{"row":249,"column":6},"end":{"row":249,"column":7},"action":"insert","lines":[" "],"id":10}],[{"start":{"row":249,"column":0},"end":{"row":249,"column":6},"action":"remove","lines":["global"],"id":11}],[{"start":{"row":249,"column":0},"end":{"row":249,"column":1},"action":"remove","lines":[" "],"id":12}],[{"start":{"row":84,"column":18},"end":{"row":85,"column":0},"action":"insert","lines":["",""],"id":13},{"start":{"row":85,"column":0},"end":{"row":85,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":85,"column":8},"end":{"row":85,"column":9},"action":"insert","lines":["c"],"id":14}],[{"start":{"row":85,"column":9},"end":{"row":85,"column":10},"action":"insert","lines":["o"],"id":15}],[{"start":{"row":85,"column":10},"end":{"row":85,"column":11},"action":"insert","lines":["n"],"id":16}],[{"start":{"row":85,"column":11},"end":{"row":85,"column":12},"action":"insert","lines":["s"],"id":17}],[{"start":{"row":85,"column":12},"end":{"row":85,"column":13},"action":"insert","lines":["o"],"id":18}],[{"start":{"row":85,"column":13},"end":{"row":85,"column":14},"action":"insert","lines":["l"],"id":19}],[{"start":{"row":85,"column":14},"end":{"row":85,"column":15},"action":"insert","lines":["e"],"id":20}],[{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"insert","lines":["."],"id":21}],[{"start":{"row":85,"column":16},"end":{"row":85,"column":17},"action":"insert","lines":["l"],"id":22}],[{"start":{"row":85,"column":17},"end":{"row":85,"column":18},"action":"insert","lines":["o"],"id":23}],[{"start":{"row":85,"column":18},"end":{"row":85,"column":19},"action":"insert","lines":["g"],"id":24}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":19},"action":"remove","lines":["        console.log"],"id":25}],[{"start":{"row":84,"column":18},"end":{"row":85,"column":0},"action":"remove","lines":["",""],"id":26}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":84,"column":18},"end":{"row":84,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1507924454967}